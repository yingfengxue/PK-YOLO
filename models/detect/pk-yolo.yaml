# YOLOv9

# parameters
nc: 3  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
# activation: nn.LeakyReLU(0.1)
# activation: nn.ReLU()

# anchors
anchors: 3

# YOLOv9 backbone
backbone:
  [
   [-1, 1, Silence, []],

   [-1, 1, Backbone, []],
   # conv down
   [1, 1, Down0, [64]], #2 320   1
   [1, 1, Down1, [128]], # 3  160   3
    [1, 1, Down2, [256]],# 4  80    5
    [1, 1, Down3, [512]], #5    40  7
    [1, 1, Down4, [1024]], #6    20     9

    # routing
   [ 2, 1, CBLinear, [ [ 64 ] ] ], # 10
   [ 3, 1, CBLinear, [ [ 64, 128 ] ] ], # 11
   [ 4, 1, CBLinear, [ [ 64, 128, 256 ] ] ], # 12
   [ 5, 1, CBLinear, [ [ 64, 128, 256, 512 ] ] ], # 13
   [ 6, 1, CBLinear, [ [ 64, 128, 256, 512, 1024 ] ] ], # 14   -3

    # conv down fuse
   [ 0, 1, Conv, [ 64, 3, 2 ] ],  # 15-P1/2
   [ [ 7, 8, 9, 10, 11, -1 ], 1, CBFuse, [ [ 0, 0, 0, 0, 0 ] ] ], # 16

    # conv down fuse
   [ -1, 1, Conv, [ 128, 3, 2 ] ],  # 17-P2/4
   [ [ 8, 9, 10, 11, -1 ], 1, CBFuse, [ [ 1, 1, 1, 1 ] ] ], # 18

    # elan-1 block
   [ -1, 1, RepNCSPELAN4, [ 256, 128, 64, 2 ] ],  # 19

    # avg-conv down fuse
   [ -1, 1, ADown, [ 256 ] ],  # 20-P3/8
   [ [  9, 10, 11, -1 ], 1, CBFuse, [ [ 2, 2, 2 ] ] ], # 21

    # elan-2 block
   [ -1, 1, RepNCSPELAN4, [ 512, 256, 128, 2 ] ],  # 22

    # avg-conv down fuse
   [ -1, 1, ADown, [ 512 ] ],  # 23-P4/16
   [ [ 10, 11, -1 ], 1, CBFuse, [ [ 3, 3 ] ] ], # 24

    # elan-2 block
   [ -1, 1, RepNCSPELAN4, [ 1024, 512, 256, 2 ] ],  # 25

    # avg-conv down fuse
   [ -1, 1, ADown, [ 1024 ] ],  # 26-P5/32
   [ [ 11, -1 ], 1, CBFuse, [ [ 4 ] ] ], # 27

    # elan-2 block
   [ -1, 1, RepNCSPELAN4, [ 1024, 512, 256, 2 ] ],  # 28   25

  ]

# YOLOv9 head
head:
  [
   # multi-level auxiliary branch  
  
   # elan-spp block
   [6, 1, SPPELAN, [512, 256]],  # 29

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 5], 1, Concat, [1]],  # cat backbone P4

   # csp-elan block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 2]],  # 32

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3

   # csp-elan block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 2]],  # 35
   
   
   
   # main branch  
   
   # elan-spp block
   [25, 1, SPPELAN, [512, 256]],  # 36

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 22], 1, Concat, [1]],  # cat backbone P4

   # csp-elan block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 2]],  # 39

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 19], 1, Concat, [1]],  # cat backbone P3

   # csp-elan block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 2]],  # 42 (P3/8-small)

   # avg-conv-down merge
   [-1, 1, ADown, [256]],
   [[-1, 36], 1, Concat, [1]],  # cat head P4

   # csp-elan block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 2]],  # 45 (P4/16-medium)

   # avg-conv-down merge
   [-1, 1, ADown, [512]],
   [[-1, 33], 1, Concat, [1]],  # cat head P5

   # csp-elan block
   [-1, 1, RepNCSPELAN4, [512, 1024, 512, 2]],  # 48 (P5/32-large)

   # detect
   [[32, 29, 26, 39, 42, 45], 1, DualDDetect, [nc]],  # DualDDetect(A3, A4, A5, P3, P4, P5)
  ]
